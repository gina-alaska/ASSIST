/*
# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
*/


$(document).ready(function() {
  $(".coord").change( parseCoord )

  $(".obs-submit").click(function() {
    $("#observation_form").attr("action", $(this).attr("data-url"));
  
    $("#observation_form").submit();
  });

  $("a[data-toggle=pill]").on("click", function() {
    $(this).siblings(".btn-primary").removeClass("btn-primary");
    $(this).addClass("btn-primary");
    //Set up the comments to have the correct prefix
    $("#comment_data").val("(" + $(this).html() + ")");
  });
  
  $("#obs-validate").click( function() {
    var url = $("#obs-validate").attr("data-url");
    var params = $("#observation_form").serialize();
    $.ajax( url, {
      data: params,
      type: 'POST',
      error: handleValidateError,
      success: handleValidateSuccess
    });
  })
    
  $("#observation_form").on('change', function() {
    $("#save_observation").addClass('btn-danger').button('enable');
  });

  return false;
  var $obsForm = $('#observation_form');
  $obsForm.tabs({
    show: function(event, ui) {
      $(ui.panel).find('.topography').chosen({
        width: '98%'
      }).change( handleTopographies );//.removeClass("topography");


      $(ui.panel).find('.combobox:visible').chosen({
        width: '98%'
      });
      $(ui.panel).find('.users:visible').chosen({
        no_results_text: "That user was not found.",
        width: '98%'
      });
    },
    select: function(event,ui) {
      var form = $(".ui-tabs-panel form.autosave.dirty:visible");
      if(form.length !== 0 ) {
        event.preventDefault();
        saveFormAndChangeTab(form.first(), ui);
      }
    }

  });

  $("#next_button").click(function(event) {
    event.preventDefault();

    var panel = $("#observation_form");
    var currentTab = $(panel).tabs('option','selected');
    $(panel).tabs('option', 'selected', currentTab + 1);

  });


  $("#nav_buttons").buttonset();
  $(".radioset").buttonset();
  $("#adduser").button({
    icons: {
      primary: 'ui-icon-plusthick'
    }
  });

  $("#observation_date").datepicker({
    dateFormat: "yy.mm.dd",
    constrainInput: false
  });

  $("form.autosave").change( function() {
    $(this).addClass("dirty");
    $("#save_button").addClass("dirty");
    $("#save_button").button("enable");
  });


  $("#save_button").click( function(event) {
    // var tab = $("#observation_form").tabs("option", "selected");
    // $("#observation_form").trigger("select");
    // event.preventDefault();
    
    var form = $(".ui-tabs-panel form.autosave.dirty:visible");
    $.each(form, function( index, f ) {
      $.rails.handleRemote( $(f) );
    });
    event.preventDefault();
    
  });



  $("form.notify").bind("ajax:beforeSend", function(e) {
    $(".field_with_errors").removeClass("field_with_errors");
    $.growlUI("", "Saving");
  });
  $("form.notify").bind("ajax:error", function(evt, xhr, status, error) {
    var response = $.parseJSON(xhr.responseText);
    var msg = response.flash;

    $.each(response.errors, function( key, values) {
      $("."+key).addClass("field_with_errors");
    });
    $.growlUI("Errors", response.flash.join("<br />"));
  });
  $("form.notify").bind("ajax:success", function(evt, data, status, xhr) {
    $.growlUI("","Save Successful");
    $("form.dirty:first").removeClass("dirty");
    $("#save_button").removeClass("dirty");
    $("#save_button").button("disable");
  });


  $(".file_upload").button();
  $(".import").fileupload({
    dataType: 'json',
    url: $(this).attr('action'),
    add: function( e, data ) {
      $("body").block({
        message: "Please wait, this may take a while"
      });
      data.submit();
    },
    done: function(e, data ) {
      $("body").unblock();
    }, 
    error: function( e, data ) {
      $.growlUI("","There was an error");
    },
    success: function(xhr, result) {
      $.growlUI("", xhr['imported'] + " records imported");
    }
  });
});



function saveFormAndChangeTab( form, ui ) {

  $(form).block({message:null});
  $.ajax({
    url: $(form).attr("action"),
    type: 'PUT',
    data: $(form).serialize(),
    beforeSend: function(xhr, settings) {
      return $.rails.fire( form, "ajax:beforeSend",[xhr,settings]);
    },
    success: function(data, status, xhr) {
      $("#observation_form").tabs('option', 'selected', ui.index);
      form.trigger("ajax:success", [data,status,xhr]);
    },
    complete: function(xhr, status) {
      form.trigger("ajax:complete", [xhr,status]);
      $(form).unblock();
    },
    error: function(xhr, status, error) {
      form.trigger("ajax:error", [xhr,status,error]);
    }
  });
}

function parseCoord( evt ) {
  var value = $(evt.target).val();
  this.toDD = function( v) {
    var c = v.split(" ")
    var deg = parseFloat(c[0]);
    var ms = c[1].split(".");
    var min = parseInt(ms[0]);
    var sec = ms.length > 1 ? parseInt(ms[1]) : 0;
    var dec = (min * 60 + sec) / 3600.0;
    var dd = deg > 0 ? deg + dec : deg - dec;
    return "DD: " + dd.toFixed(4);
  };

  this.toDMS = function(v) {
    var c = parseFloat(v);
    var deg = c < 0 ? Math.ceil(c) : Math.floor(c);
    var ms = Math.abs( c - deg )  * 60.0;
    var min = Math.floor( ms );
    var sec = (ms % 1 ) * 60.0;
    return "DMS: " + deg + " " + (min + Math.round(sec) / 100.0 );
  };
  
  var altText = "";
  if( value.match(/^(\+|-)?[0-9]{1,3}\s[0-9]{1,2}(\.[0-9]{1,2})?(\s?[NSEW])?$/)) {
    altText = this.toDD(value)
  } else if ( value.match(/^(\+|-)?[0-9]{1,3}\.[0-9]*(\s?[EW])?$/)) {
    altText = this.toDMS(value)
  }

  $(evt.target).siblings(".help-block:last").html(altText);

}

function handleValidateError(jqXhr, status, e) {
  console.log(jqXhr);
  flashNotice(jqXhr.responseText);
}

function handleValidateSuccess(data, status, jqXhr) {
  console.log(jqXhr);
  //flashNotice(jqXhr.responseText);
}

function flashNotice(data) {
  $("#errors").html(data)
}